const nodemailer = require('nodemailer');

const dotenv = require('dotenv');

dotenv.config({
  path: "D:\\Paperless GIT\\api-paperless-apg\\src\\.env"
}); // Configure the nodemailer transport

let transporter = nodemailer.createTransport({
  host: "smtp.office365.com",
  port: 587,
  auth: {
    user: process.env.MAIL_AUTH_USER,
    pass: process.env.MAIL_AUTH_PASS
  },
  secureConnection: false,
  tls: {
    ciphers: "SSLv3"
  }
}); // Middleware to send email NEXT

const sendEmailMiddlewareNext = (req, res, next) => {
  const receivers = req.body.receivers;
  const mailOptions = {
    from: 'paperless@apgmexico.mx',
    to: receivers.join(', '),
    // Join the receivers array into a comma-separated string
    subject: `${req.body.subject}\n`,
    text: 'DO NOT REPLY BACK this email - Autogenerated \n\n' + `Message:\n ${req.body.message}`
  };
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.log('Error sending email: ', error);
    } else {
      console.log('Email sent: ', info.response);
    }
  });
  next();
}; // Middleware to send email NEXT


const sendEmailMiddlewareResponse = (req, res, next) => {
  const receivers = req.body.receivers;
  const mailOptions = {
    from: 'paperless@apgmexico.mx',
    to: receivers.join(', '),
    // Join the receivers array into a comma-separated string
    subject: `${req.body.emailSubject}\n`,
    text: 'DO NOT REPLY BACK this email - Autogenerated \n\n' + `Message:\n ${req.body.emailMessage}`
  };
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      return res.status(206).json({
        message: "Email not Delivered: " + error,
        status: "206"
      }); //console.log('Error sending email: ', error);
    } else {
      return res.status(200).json({
        status: "200",
        message: "Email Sent"
      }); //console.log('Email sent: ', info.response);
    }
  });
};

module.exports = {
  sendEmailMiddlewareNext,
  sendEmailMiddlewareResponse
};